[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactiveDict = Package['reactive-dict'].ReactiveDict;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"body.html\":[\"./template.body.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/body.html                                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.exports = require(\"./template.body.js\");                                          // 1\n                                                                                         // 2\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.body.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/template.body.js                                                           //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n                                                                                         // 1\nTemplate.body.addContent((function() {                                                   // 2\n  var view = this;                                                                       // 3\n  return HTML.DIV({                                                                      // 4\n    \"class\": \"container\"                                                                 // 5\n  }, HTML.Raw('\\n    <header>\\n      <h1>Todo List</h1>\\n\\n      <label class=\"hide-completed\">\\n        <input type=\"checkbox\">\\n        Hide Completed Tasks\\n      </label>\\n\\n      <form class=\"new-task\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n      </form>\\n    </header>\\n \\n    '), HTML.UL(\"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));                                         // 7\n  }, function() {                                                                        // 8\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \");                                                                // 10\n}));                                                                                     // 11\nMeteor.startup(Template.body.renderToDocument);                                          // 12\n                                                                                         // 13\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"task.html\":[\"./template.task.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/task.html                                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.exports = require(\"./template.task.js\");                                          // 1\n                                                                                         // 2\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.task.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/template.task.js                                                           //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n                                                                                         // 1\nTemplate.__checkName(\"task\");                                                            // 2\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {                           // 3\n  var view = this;                                                                       // 4\n  return HTML.LI({                                                                       // 5\n    \"class\": function() {                                                                // 6\n      return Blaze.If(function() {                                                       // 7\n        return Spacebars.call(view.lookup(\"checked\"));                                   // 8\n      }, function() {                                                                    // 9\n        return \"checked\";                                                                // 10\n      });                                                                                // 11\n    }                                                                                    // 12\n  }, HTML.Raw('\\n    <button class=\"delete\">&times;</button>\\n \\n    '), HTML.INPUT({    // 13\n    type: \"checkbox\",                                                                    // 14\n    checked: function() {                                                                // 15\n      return Spacebars.mustache(view.lookup(\"checked\"));                                 // 16\n    },                                                                                   // 17\n    \"class\": \"toggle-checked\"                                                            // 18\n  }), \"\\n \\n    \", HTML.SPAN({                                                           // 19\n    \"class\": \"text\"                                                                      // 20\n  }, Blaze.View(\"lookup:text\", function() {                                              // 21\n    return Spacebars.mustache(view.lookup(\"text\"));                                      // 22\n  })), \"\\n  \");                                                                          // 23\n}));                                                                                     // 24\n                                                                                         // 25\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"body.js\":[\"meteor/templating\",\"../api/tasks.js\",\"./task.js\",\"./body.html\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/body.js                                                                    //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar _templating = require('meteor/templating');                                          // 1\n                                                                                         //\nvar _tasks = require('../api/tasks.js');                                                 // 2\n                                                                                         //\nrequire('./task.js');                                                                    // 4\n                                                                                         //\nrequire('./body.html');                                                                  // 5\n                                                                                         //\n_templating.Template.body.helpers({                                                      // 7\n  tasks: function () {                                                                   // 8\n    function tasks() {                                                                   //\n                                                                                         //\n      // Show newest tasks at the top                                                    //\n      return _tasks.Tasks.find({}, { sort: { createdAt: -1 } });                         // 11\n    }                                                                                    //\n                                                                                         //\n    return tasks;                                                                        //\n  }()                                                                                    //\n});                                                                                      //\n                                                                                         //\n_templating.Template.body.events({                                                       // 15\n  'submit .new-task': function () {                                                      // 16\n    function submitNewTask(event) {                                                      //\n      // Prevent default browser form submit                                             //\n      event.preventDefault();                                                            // 18\n                                                                                         //\n      // Get value from form element                                                     //\n      var target = event.target;                                                         // 16\n      var text = target.text.value;                                                      // 22\n                                                                                         //\n      // Insert a task into the collection                                               //\n      _tasks.Tasks.insert({                                                              // 16\n        text: text,                                                                      // 27\n        createdAt: new Date() });                                                        // 28\n                                                                                         //\n      // Clear form                                                                      //\n      // current time                                                                    // 16\n      target.text.value = '';                                                            // 32\n    }                                                                                    //\n                                                                                         //\n    return submitNewTask;                                                                //\n  }()                                                                                    //\n});                                                                                      //\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"task.js\":[\"meteor/templating\",\"../api/tasks.js\",\"./task.html\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/task.js                                                                    //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar _templating = require('meteor/templating');                                          // 1\n                                                                                         //\nvar _tasks = require('../api/tasks.js');                                                 // 3\n                                                                                         //\nrequire('./task.html');                                                                  // 5\n                                                                                         //\n_templating.Template.task.events({                                                       // 7\n  'click .toggle-checked': function () {                                                 // 8\n    function clickToggleChecked() {                                                      //\n      // Set the checked property to the opposite of its current value                   //\n      _tasks.Tasks.update(this._id, {                                                    // 10\n        $set: { checked: !this.checked }                                                 // 11\n      });                                                                                //\n    }                                                                                    //\n                                                                                         //\n    return clickToggleChecked;                                                           //\n  }(),                                                                                   //\n  'click .delete': function () {                                                         // 14\n    function clickDelete() {                                                             //\n      _tasks.Tasks.remove(this._id);                                                     // 15\n    }                                                                                    //\n                                                                                         //\n    return clickDelete;                                                                  //\n  }()                                                                                    //\n});                                                                                      //\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"api\":{\"tasks.js\":[\"meteor/mongo\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/api/tasks.js                                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nexports.__esModule = true;                                                               //\nexports.Tasks = undefined;                                                               //\n                                                                                         //\nvar _mongo = require('meteor/mongo');                                                    // 1\n                                                                                         //\nvar Tasks = exports.Tasks = new _mongo.Mongo.Collection('tasks');                        // 3\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"client\":{\"main.js\":[\"../imports/ui/body.js\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/main.js                                                                        //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nrequire('../imports/ui/body.js');                                                        // 1\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/body.html","/imports/ui/template.body.js","imports/ui/task.html","/imports/ui/template.task.js","/imports/ui/body.js","/imports/ui/task.js","/imports/api/tasks.js","/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA,6F;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8F;;;;;;;;;;;ACZA;AACA,6F;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8F;;;;;;;;;;;ACxBA;;AACA;;AAEA;;AACA;;AAEA,qBAAS,IAAT,CAAc,OAAd,CAAsB;AAClB;qBAAQ;;;AAGR,aAAO,aAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAD,EAAnB,EAAjB,CAAP,CAHQ;;;;KADU;CAAtB;;AAQA,qBAAS,IAAT,CAAc,MAAd,CAAqB;AACnB;2BAAmB,OAAO;;AAExB,YAAM,cAAN;;;AAFwB,UAKlB,SAAS,MAAM,MAAN,CALS;AAMxB,UAAM,OAAO,OAAO,IAAP,CAAY,KAAZ;;;AANW,kBAUxB,CAAM,MAAN,CAAa;AACX,kBADW;AAEX,mBAAW,IAAI,IAAJ,EAAX,EAFF;;;AAVwB;AAgBxB,aAAO,IAAP,CAAY,KAAZ,GAAoB,EAApB,CAhBwB;;;;KADP;CAArB,0F;;;;;;;;;;;ACdA;;AAEA;;AAEA;;AAEA,qBAAS,IAAT,CAAc,MAAd,CAAqB;AACnB;kCAA0B;;AAExB,mBAAM,MAAN,CAAa,KAAK,GAAL,EAAU;AACrB,cAAM,EAAE,SAAS,CAAE,KAAK,OAAL,EAAnB;OADF,EAFwB;;;;KADP;AAOnB;2BAAkB;AAChB,mBAAM,MAAN,CAAa,KAAK,GAAL,CAAb,CADgB;;;;KAPC;CAArB,0F;;;;;;;;;;;;;;ACNA;;AAEO,IAAM,wBAAQ,IAAI,aAAM,UAAN,CAAiB,OAArB,CAAR,6B;;;;;;;;;;;ACFb,6F","file":"/app.js","sourcesContent":["module.exports = require(\"./template.body.js\");\n","\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, HTML.Raw('\\n    <header>\\n      <h1>Todo List</h1>\\n\\n      <label class=\"hide-completed\">\\n        <input type=\"checkbox\">\\n        Hide Completed Tasks\\n      </label>\\n\\n      <form class=\"new-task\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n      </form>\\n    </header>\\n \\n    '), HTML.UL(\"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \");\n}));\nMeteor.startup(Template.body.renderToDocument);\n","module.exports = require(\"./template.task.js\");\n","\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": function() {\n      return Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"checked\"));\n      }, function() {\n        return \"checked\";\n      });\n    }\n  }, HTML.Raw('\\n    <button class=\"delete\">&times;</button>\\n \\n    '), HTML.INPUT({\n    type: \"checkbox\",\n    checked: function() {\n      return Spacebars.mustache(view.lookup(\"checked\"));\n    },\n    \"class\": \"toggle-checked\"\n  }), \"\\n \\n    \", HTML.SPAN({\n    \"class\": \"text\"\n  }, Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), \"\\n  \");\n}));\n","import { Template } from 'meteor/templating';\nimport { Tasks } from '../api/tasks.js';\n \nimport './task.js';\nimport './body.html';\n \nTemplate.body.helpers({\n    tasks() {\n\n        // Show newest tasks at the top\n    return Tasks.find({}, { sort: { createdAt: -1 } });\n  },\n});\n\nTemplate.body.events({\n  'submit .new-task'(event) {\n    // Prevent default browser form submit\n    event.preventDefault();\n \n    // Get value from form element\n    const target = event.target;\n    const text = target.text.value;\n\n \n    // Insert a task into the collection\n    Tasks.insert({\n      text,\n      createdAt: new Date(), // current time\n    });\n \n    // Clear form\n    target.text.value = '';\n  },\n});","import { Template } from 'meteor/templating';\n \nimport { Tasks } from '../api/tasks.js';\n \nimport './task.html';\n \nTemplate.task.events({\n  'click .toggle-checked'() {\n    // Set the checked property to the opposite of its current value\n    Tasks.update(this._id, {\n      $set: { checked: ! this.checked },\n    });\n  },\n  'click .delete'() {\n    Tasks.remove(this._id);\n  },\n});","import { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');","import '../imports/ui/body.js';\n"]}}]